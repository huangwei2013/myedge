// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bye.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ByeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByeRequest) Reset()         { *m = ByeRequest{} }
func (m *ByeRequest) String() string { return proto.CompactTextString(m) }
func (*ByeRequest) ProtoMessage()    {}
func (*ByeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67fce0ed6773c3ad, []int{0}
}

func (m *ByeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByeRequest.Unmarshal(m, b)
}
func (m *ByeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByeRequest.Marshal(b, m, deterministic)
}
func (m *ByeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByeRequest.Merge(m, src)
}
func (m *ByeRequest) XXX_Size() int {
	return xxx_messageInfo_ByeRequest.Size(m)
}
func (m *ByeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByeRequest proto.InternalMessageInfo

func (m *ByeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ByeReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByeReply) Reset()         { *m = ByeReply{} }
func (m *ByeReply) String() string { return proto.CompactTextString(m) }
func (*ByeReply) ProtoMessage()    {}
func (*ByeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_67fce0ed6773c3ad, []int{1}
}

func (m *ByeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByeReply.Unmarshal(m, b)
}
func (m *ByeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByeReply.Marshal(b, m, deterministic)
}
func (m *ByeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByeReply.Merge(m, src)
}
func (m *ByeReply) XXX_Size() int {
	return xxx_messageInfo_ByeReply.Size(m)
}
func (m *ByeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ByeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ByeReply proto.InternalMessageInfo

func (m *ByeReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*ByeRequest)(nil), "service.ByeRequest")
	proto.RegisterType((*ByeReply)(nil), "service.ByeReply")
}

func init() { proto.RegisterFile("bye.proto", fileDescriptor_67fce0ed6773c3ad) }

var fileDescriptor_67fce0ed6773c3ad = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xaa, 0x4c, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x55, 0x92,
	0xe1, 0xe2, 0x72, 0xaa, 0x4c, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe3, 0x62,
	0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c, 0x51, 0x92, 0xe3, 0xe2,
	0x00, 0xcb, 0x16, 0xe4, 0x54, 0x0a, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x82, 0x65, 0x59,
	0x83, 0xc0, 0x6c, 0x23, 0x4b, 0x2e, 0x66, 0xa7, 0xca, 0x54, 0x21, 0x23, 0x2e, 0xb6, 0xe0, 0xc4,
	0x4a, 0x10, 0x4b, 0x58, 0x0f, 0x6a, 0xb0, 0x1e, 0xc2, 0x54, 0x29, 0x41, 0x54, 0xc1, 0x82, 0x9c,
	0x4a, 0x25, 0x06, 0x27, 0xb6, 0x28, 0x16, 0x3d, 0xeb, 0x82, 0xa4, 0x24, 0x36, 0xb0, 0x83, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xd4, 0x16, 0x5f, 0x9d, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ByeClient is the client API for Bye service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ByeClient interface {
	SayBye(ctx context.Context, in *ByeRequest, opts ...grpc.CallOption) (*ByeReply, error)
}

type byeClient struct {
	cc *grpc.ClientConn
}

func NewByeClient(cc *grpc.ClientConn) ByeClient {
	return &byeClient{cc}
}

func (c *byeClient) SayBye(ctx context.Context, in *ByeRequest, opts ...grpc.CallOption) (*ByeReply, error) {
	out := new(ByeReply)
	err := c.cc.Invoke(ctx, "/service.Bye/SayBye", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ByeServer is the server API for Bye service.
type ByeServer interface {
	SayBye(context.Context, *ByeRequest) (*ByeReply, error)
}

// UnimplementedByeServer can be embedded to have forward compatible implementations.
type UnimplementedByeServer struct {
}

func (*UnimplementedByeServer) SayBye(ctx context.Context, req *ByeRequest) (*ByeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayBye not implemented")
}

func RegisterByeServer(s *grpc.Server, srv ByeServer) {
	s.RegisterService(&_Bye_serviceDesc, srv)
}

func _Bye_SayBye_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ByeServer).SayBye(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Bye/SayBye",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ByeServer).SayBye(ctx, req.(*ByeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bye_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Bye",
	HandlerType: (*ByeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayBye",
			Handler:    _Bye_SayBye_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bye.proto",
}
